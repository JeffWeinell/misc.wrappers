devtools::document()
Ahaetulla.stats <- read.table("/Users/alyssaleinweber/Downloads/Ahaetulla_stacks_stats.txt")
Ahaetulla.stats
library(ggplot2)
Ahaetulla.stats <- read.table("/Users/alyssaleinweber/Downloads/Ahaetulla_stacks_stats.txt",header=T)
Ahaetulla.stats
strsplit(Ahaetulla.stats$params,split="_")
do.call(rbind,strsplit(Ahaetulla.stats$params,"_"))
params.mat1 <- do.call(rbind,strsplit(Ahaetulla.stats$params,"_"))
strsplit(params.mat1,"")
do.call(rbind,strsplit(params.mat1,""))
params.mat1
gsub("^.","", params.mat1)
params.mat2 <- gsub("^.","", params.mat1)
mode(params.mat2) <- "integer"
params.mat2
colnames(params.mat2) <- c("m","M","N","n")
params.mat2
params.df <- as.data.frame(params.mat2)
params.df
res2 <- data.frame(Ahaetulla.stats,params.df)
res2
?drop
wc
library(hierfstat)
wc
Fxy
?Fxy
??Fxy
res2
ggplot(data= res2,aes(x=params,y=Ho)) + geom_bar()
rlang::last_error()
res3 <- res2
res3$params <- factor(res3$params)
ggplot(data=res3, aes(x=params,y=Ho)) + geom_bar()
ggplot(data=res3) + geom_bar(aes(x=params,y=Ho))
ggplot() + geom_bar(res3 ,aes(x=params,y=Ho))
ggplot(data=res3, aes(x=params,y=Ho))
res3
res3
ggplot() + geom_bar(data=res3 ,mapping=aes(x=params,y=Ho))
ggplot(data=res3 ,mapping=aes(x=params,y=Ho)) + geom_bar()
ggplot(data=res3 ,mapping=aes(x=params,y=Ho))
ggplot(data=res3 ,mapping=aes(y=Ho),x=params) + geom_bar()
ggplot(data=res3 ,mapping=aes(x=params,y=Ho)) + geom_bar(stat="identity")
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,fill=n)) + geom_bar(stat="identity")
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,fill=n)) + geom_point()
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,color=n)) + geom_point()
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,color=n)) + geom_point() + scale_color_discrete()
res3$n <- factor(res3$n)
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,color=n)) + geom_point() + scale_color_discrete()
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,color=n)) + geom_point() + scale_color_discrete() + theme_void()
ggplot(data=res3 ,mapping=aes(x=M,y=Ho,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y=Hs,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
?basic.stats
ggplot(data=res3 ,mapping=aes(x=M,y=Fis,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= nsite,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= mean.missing.site,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
res3$missing.total <- res3mean.missing.indv
res3$missing.total <- res3$mean.missing.indv
plot.nloci            <- ggplot(data=res3 ,mapping=aes(x=M,y= nloci,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
plot.nloci
plot.missing.total    <- ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point() + scale_color_discrete() + theme_classic()
plot.missing.total
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n),size=4) + geom_point() + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n),size=7) + geom_point() + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point(size=7) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point(size=5) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point(size=4) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= nloci,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
# m3M1N3n2 has hight number of loci
ggplot(data=res3 ,mapping=aes(x=M,y= missing.total,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
# m3M1N3n2 has fairly low missing data
ggplot(data=res3 ,mapping=aes(x=M,y= nsites,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= nsite,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
ggplot(data=res3 ,mapping=aes(x=M,y= Fis,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
devtools::document()
devtools::document()
devtools::document()
remotes::install_github("JeffWeinell/misc.wrappers",upgrade=FALSE)
devtools::document()
devtools::document()
devtools::document()
87/3
"/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats.txt"
read.table("/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats.txt",header=T)
vcf.stats <- read.table("/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats.txt",header=T)
vcf.stats$m <- NA
vcf.stats$m <- vcf.stats$M <- vcf.stats$N <- vcf.stats$n <- vcf.stats$MaxMissingDataSiteFilter <- NA
mMNn.string0 <- gsub("Ahaetulla_AllPops_","",vcf.stats$filename)
mMNn.string1 <- gsub("_BestSNP.+$","", mMNn.string0)
mMNn.string1
mMNn.mat <- do.call(rbind,strsplit(mMNn.string1,"_"))
mMNn.mat
mMNn.mat <- gsub("^.","",do.call(rbind,strsplit(mMNn.string1,"_")))
mMNn.mat
mode(mNMn.mat) <- "numeric"
mode(mMNn.mat) <- "numeric"
vcf.stats <- read.table("/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats.txt",header=T)
vcf.stats2 <- data.frame(vcf.stats,mMNn.mat)
vcf.stats2[1,]
colnames(mMNn.mat) <- c("m","M","N","n")
vcf.stats2 <- data.frame(vcf.stats,mMNn.mat)
vcf.stats2[1,]
vcf.stats2$MaxMissingDataSiteFilter <- NA
grep("MissingData5percent",vcf.stats2$filename)
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData5percent",vcf.stats2$filename)] <- 5
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData10percent",vcf.stats2$filename)] <- 10
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData20percent",vcf.stats2$filename)] <- 20
vcf.stats2$MaxMissingDataSiteFilter[is.na(vcf.stats2$MaxMissingDataSiteFilter)] <- 100
vcf.stats2[1:3,]
vcf.stats2$max.missingness.indv
vcf.stats2$max.missingness.site
devtools::document()
devtools::document()
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
vcf.stats2$n <- factor(vcf.stats2$n)
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_color_discrete() + theme_classic()
vcf.stats2$MaxMissingDataSiteFilter <- factor(vcf.stats2$MaxMissingDataSiteFilter)
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic()
vcf.stats2$MaxMissingDataSiteFilter
table(vcf.stats2$MaxMissingDataSiteFilter)
vcf.stats2[vcf.stats2$MaxMissingDataSiteFilter==100,"nloci"]
vcf.stats2[vcf.stats2$MaxMissingDataSiteFilter==100,"filename"]
vcf.stats2$MaxMissingDataSiteFilter <- NA
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData5percent",vcf.stats2$filename)] <- 5#
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData10percent",vcf.stats2$filename)] <- 10#
vcf.stats2$MaxMissingDataSiteFilter[grep("MissingData20percent",vcf.stats2$filename)] <- 20
vcf.stats2$MaxMissingDataSiteFilter[grep("NoMissingData",vcf.stats2$filename)] <- 0
vcf.stats2$MaxMissingDataSiteFilter[is.na(vcf.stats2$MaxMissingDataSiteFilter)] <- 100
vcf.stats2[vcf.stats2$MaxMissingDataSiteFilter==100,"nloci"]
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic()
vcf.stats2$MaxMissingDataSiteFilter <- factor(vcf.stats2$MaxMissingDataSiteFilter)
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y= nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic()
colnames(vcf.stats2)
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic()
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() +title("test")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() +theme(title.text="test")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() +theme(text.title="test")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + theme(title="test")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + theme(title=element_text("test"))
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="test")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(breaks=1:8) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(breaks=1:8,labels=1:8) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(labels=1:8) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(name=1:8) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=c(1,8)) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=1:8) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=Fis,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
ggplot(data=vcf.stats2 ,mapping=aes(x=M,y=nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
devtools::document()
?basic.stats
vcf.stats2$Heterozygosity.expected/vcf.stats2$Heterozygosity.observed
basic.stats
vcf.stats2[1:3,]
devtools::document()
vcf <- "/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats_v2.txt"
Ahaetulla.vcf.stats <- read.table("/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Ahaetulla_VCF_stats_v2.txt",header=T)
Ahaetulla.vcf.stats[1:10,1:10]
Ahaetulla.vcf.stats[,1:10]
mMNn.string0 <- gsub("Ahaetulla_AllPops_","", Ahaetulla.vcf.stats $filename)#
mMNn.string1 <- gsub("_BestSNP.+$","", mMNn.string0)
mMNn.mat <- gsub("^.","",do.call(rbind,strsplit(mMNn.string1,"_")))
mMNn.mat
mode(mMNn.mat) <- "numeric"
colnames(mMNn.mat) <- c("m","M","N","n")
Ahaetulla.vcf.stats <- data.frame(Ahaetulla.vcf.stats,mMNn.mat)
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter <- NA#
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData5percent",Ahaetulla.vcf.stats$filename)] <- 5#
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData10percent",Ahaetulla.vcf.stats$filename)] <- 10#
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData20percent",Ahaetulla.vcf.stats$filename)] <- 20#
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter[grep("NoMissingData",Ahaetulla.vcf.stats$filename)] <- 0#
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter[is.na(Ahaetulla.vcf.stats$MaxMissingDataSiteFilter)] <- 100
Ahaetulla.vcf.stats
ggplot(data=Ahaetulla.vcf.stats ,mapping=aes(x=M,y=nloci,color=n,shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
Ahaetulla.vcf.stats$MaxMissingDataSiteFilter <- factor(Ahaetulla.vcf.stats$MaxMissingDataSiteFilter)
Ahaetulla.vcf.stats$n <- factor(Ahaetulla.vcf.stats$n)
Ahaetulla.vcf.stats$n <- factor(Ahaetulla.vcf.stats$n)
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=M, y=Fis, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
save.path <- "/panfs/pfs.local/home/j926w878/work/ddRAD/snps_goodData/Calamaria_new/"
save.path
outdirs   <- list.dirs(save.path,full.name=TRUE,recursive=F)#
in.paths  <- file.path(outdirs,"populations.snps.vcf")#
out.paths <- file.path(save.path,sprintf("%s_%s_BestSNP.vcf",basename(save.path),basename(outdirs)))
out.paths
Ahaetulla.vcf.stats$m <- factor(Ahaetulla.vcf.stats$m)
colnames(Ahaetulla.vcf.stats)
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=n, shape=M)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
Ahaetulla.vcf.stats$M <- factor(Ahaetulla.vcf.stats$M)
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=n, shape=M)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, shape=n)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=3) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=1) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + scale_y_log10() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, shape=n)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
devtools::document()
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus") # + scale_y_log10()
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=M, y=Fis, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, for Ahaetulla prasina Best SNP per locus")
ggplot(data=Ahaetulla.vcf.stats, mapping=aes(x=missingness.total, y=Fis, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Inbreeding coefficient vs. proportion missing data, n, M, for Ahaetulla prasina Best SNP per locus")
"/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Calamaria_VCF_stats.txt"
Calamaria.vcf.stats <- read.table("/Users/alyssaleinweber/Documents/Chapter4_Bicol-vs-Luzon/Calamaria_VCF_stats.txt",header=T)
Calamaria.vcf.stats
mMNn.string0        <- gsub("Calamaria_AllPops_","", Calamaria.vcf.stats $filename)
mMNn.string1        <- gsub("_BestSNP.+$","", mMNn.string0)
mMNn.mat            <- gsub("^.","",do.call(rbind,strsplit(mMNn.string1,"_")))
mMNn.string1[1]
mMNn.string2        <- gsub("_AllSNPs.+$","", mMNn.string1)
mMNn.string2
mMNn.mat            <- gsub("^.","",do.call(rbind,strsplit(mMNn.string2,"_")))
mode(mMNn.mat)      <- "numeric"#
colnames(mMNn.mat)  <- c("m","M","N","n")
mMNn.mat
Calamaria.vcf.stats <- data.frame(Calamaria.vcf.stats,mMNn.mat)
Calamaria.vcf.stats
Calamaria.vcf.stats$MaxMissingDataSiteFilter <- NA#
Calamaria.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData5percent",Calamaria.vcf.stats$filename)]  <- 5#
Calamaria.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData10percent",Calamaria.vcf.stats$filename)] <- 10#
Calamaria.vcf.stats$MaxMissingDataSiteFilter[grep("MissingData20percent",Calamaria.vcf.stats$filename)] <- 20#
Calamaria.vcf.stats$MaxMissingDataSiteFilter[grep("NoMissingData",Calamaria.vcf.stats$filename)]  <- 0#
Calamaria.vcf.stats$MaxMissingDataSiteFilter[is.na(Calamaria.vcf.stats$MaxMissingDataSiteFilter)] <- 100
Calamaria.vcf.stats[1,]
Calamaria.vcf.stats$SNPsPerLocus <- NA
Calamaria.vcf.stats$SNPsPerLocus[grep("BestSNP",Calamaria.vcf.stats$filename)] <- "Best"#
Calamaria.vcf.stats$SNPsPerLocus[grep("AllSNPs",Calamaria.vcf.stats$filename)] <- "All"#
C
Calamaria.vcf.stats[1,]
Calamaria.vcf.stats[1:3,]
Calamaria.vcf.stats[1:5,]
Calamaria.vcf.stats[1:10,]
Calamaria.vcf.stats[1:11,]
Calamaria.vcf.stats$n <- factor(Calamaria.vcf.stats$n)#
Calamaria.vcf.stats$M <- factor(Calamaria.vcf.stats$M)#
Calamaria.vcf.stats$MaxMissingDataSiteFilter <- factor(Calamaria.vcf.stats$MaxMissingDataSiteFilter)
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus") # + scale_y_log10()
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=missingness.total, y=nloci, color=M, shape=n)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=M, y=nloci, linetype=n, color=MaxMissingDataSiteFilter)) + geom_line(size=3) + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=M, y=nloci, linetype=n, color=MaxMissingDataSiteFilter)) + geom_line(size=0.5) + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats, mapping=aes(x=missingness.total, y=Fis, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Inbreeding coefficient vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus")
Calamaria.vcf.stats.best <- Calamaria.vcf.stats[,Calamaria.vcf.stats$SNPsPerLocus=="Best"]
Calamaria.vcf.stats$SNPsPerLocus=="Best"
which(Calamaria.vcf.stats$SNPsPerLocus=="Best")
Calamaria.vcf.stats.best <- Calamaria.vcf.stats[Calamaria.vcf.stats$SNPsPerLocus=="Best",]
Calamaria.vcf.stats.best
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=missingness.total, y=nloci, color=M, shape=n)) + geom_point(size=3) + scale_shape_discrete() + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=missingness.total, y=nloci, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Number of loci vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus") # + scale_y_log10()
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=M, y=Fis, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=missingness.total, y=Fis, color=M, linetype=n)) + geom_line(size=0.5) + theme_classic() + labs(title="Inbreeding coefficient vs. proportion missing data, n, M, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")#
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=M, y=Fis, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Inbreeding coefficient vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
ggplot(data=Calamaria.vcf.stats.best, mapping=aes(x=M, y=nloci, color=n, shape=MaxMissingDataSiteFilter)) + geom_point(size=3) + scale_shape_discrete() + scale_x_discrete(limits=factor(1:8)) + theme_classic() + labs(title="Number of loci vs. M, n, max missing data per site, for Calamaria prasina Best SNP per locus")
Calamaria.vcf.stats.md100 <- Calamaria.vcf.stats[Calamaria.vcf.stats$MaxMissingDataSiteFilter==100,]
Calamaria.vcf.stats.md100
15654*2
devtools::document()
devtools::document()
upgrade_miscwrappers()
remotes::install_github("JeffWeinell/misc.wrappers",upgrade=FALSE)
if("misc.wrappers" %in% (.packages())){detach("package:misc.wrappers", unload=TRUE)}; library(misc.wrappers)
q("no")
